<?php

namespace Tests\Unit\Http\Requests;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Requests\CreateMarketPlaceRequest
 */
class CreateMarketPlaceRequestTest extends TestCase
{
    /** @var \App\Http\Requests\CreateMarketPlaceRequest */
    private $subject;

    protected function setUp(): void
    {
        parent::setUp();

        $this->subject = new \App\Http\Requests\CreateMarketPlaceRequest();
    }

    /**
     * @test
     */
    public function authorize()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->authorize();

        $this->assertTrue($actual);
    }

    /**
     * @test
     */
    public function rules()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $actual = $this->subject->rules();

        $this->assertValidationRules([
            'name' => [
                'required',
            ],
            'id' => [
                'required',
                'unique:merchants,id',
            ],
            'funded' => [
                'required',
            ],
            'rtr' => [
                'required',
            ],
            'commission' => [
                'required',
            ],
            'pmnts' => [
                'required',
            ],
            'max_participant_fund' => [
                'required',
            ],
            'participant_rtr' => [
                'required',
            ],
            'mgmnt_fee' => [
                'required',
            ],
            'syndication_fee' => [
                'required',
            ],
            'sub_status_id' => [
                'required',
            ],
            'pmnt_amount' => [
                'required',
            ],
            'total_payment' => [
                'required',
            ],
        ], $actual);
    }

    // test cases...
}
