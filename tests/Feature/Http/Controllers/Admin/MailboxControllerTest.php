<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\MailboxController
 */
class MailboxControllerTest extends TestCase
{
    /**
     * @test
     */
    public function failed_jobs_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::failed-jobs'));

        $response->assertOk();
        $response->assertViewIs('failed_jobs');
        $response->assertViewHas('failed_jobs');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::mailbox'));

        $response->assertOk();
        $response->assertViewIs('admin.mailbox.index');
        $response->assertViewHas('mailboxrows');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function jobs_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::jobs'));

        $response->assertOk();
        $response->assertViewIs('jobs');
        $response->assertViewHas('jobs');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function view_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::mailbox-id', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.mailbox.view');
        $response->assertViewHas('mailboxrow');

        // TODO: perform additional assertions
    }

    // test cases...
}
