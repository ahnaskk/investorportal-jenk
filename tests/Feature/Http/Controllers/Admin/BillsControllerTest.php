<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\BillsController
 */
class BillsControllerTest extends TestCase
{
    /**
     * @test
     */
    public function account_select_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::accountSelect'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::create'));

        $response->assertOk();
        $response->assertViewIs('admin.bills.create');
        $response->assertViewHas('action');
        $response->assertViewHas('investors');
        $response->assertViewHas('bank_accounts');
        $response->assertViewHas('page_title');
        $response->assertViewHas('merchants');
        $response->assertViewHas('companies');
        $response->assertViewHas('categories');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function csv_process_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::csvprocess'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withInput());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::delete'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::edit', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.bills.create');
        $response->assertViewHas('mBills');
        $response->assertViewHas('action');
        $response->assertViewHas('bill_id');
        $response->assertViewHas('investors');
        $response->assertViewHas('action');
        $response->assertViewHas('bank_accounts');
        $response->assertViewHas('companies');
        $response->assertViewHas('selected_investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function import_bill_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::import_bill'));

        $response->assertOk();
        $response->assertViewIs('admin.bills.import_bill');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::lists'));

        $response->assertOk();
        $response->assertViewIs('admin.bills.index');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');
        $response->assertViewHas('categories');
        $response->assertViewHas('bank_accounts');
        $response->assertViewHas('companies');
        $response->assertViewHas('investor_types');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function row_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::storeCreate'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withInput());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::update', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_s_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::bills::update_s'));

        $response->assertOk();
        $response->assertViewIs('admin.bills.create');
        $response->assertViewHas('mBilll');
        $response->assertViewHas('action');
        $response->assertViewHas('merchant_id');
        $response->assertViewHas('action');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function upload_bill_csv_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::bills::csvupload'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withInput());

        // TODO: perform additional assertions
    }

    // test cases...
}
