<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\FaqController
 */
class FaqControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::faq.create'));

        $response->assertOk();
        $response->assertViewIs('admin.faq.create');
        $response->assertViewHas('page_title');
        $response->assertViewHas('action');
        $response->assertViewHas('user_type');
        $response->assertViewHas('url');
        $response->assertViewHas('route');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function datatable_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::faq.datatable'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('admin::faq.destroy', ['faq' => $faq]));

        $response->assertRedirect(to($url));
        $this->assertDeleted($admin::faq);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::faq.edit', ['faq' => $faq]));

        $response->assertOk();
        $response->assertViewIs('admin.faq.edit');
        $response->assertViewHas('page_title');
        $response->assertViewHas('action');
        $response->assertViewHas('faq');
        $response->assertViewHas('edit');
        $response->assertViewHas('url');
        $response->assertViewHas('id');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::faq.index'));

        $response->assertOk();
        $response->assertViewIs('admin.faq.index');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('title');
        $response->assertViewHas('create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::faq.show', ['faq' => $faq]));

        $response->assertOk();
        $response->assertViewIs('faq.show');
        $response->assertViewHas('faq');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::faq.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(to($url));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('admin::faq.update', ['faq' => $faq]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(to($url));

        // TODO: perform additional assertions
    }

    // test cases...
}
