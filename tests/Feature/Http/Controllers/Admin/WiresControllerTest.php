<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\WiresController
 */
class WiresControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::wires::create'));

        $response->assertOk();
        $response->assertViewIs('admin.wires.create');
        $response->assertViewHas('page_title');
        $response->assertViewHas('action');
        $response->assertViewHas('accounts');
        $response->assertViewHas('merchants');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::wires::delete', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::wires::edit', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.wires.create');
        $response->assertViewHas('action');
        $response->assertViewHas('accounts');
        $response->assertViewHas('wires_id');
        $response->assertViewHas('merchants');
        $response->assertViewHas('wires');
        $response->assertViewHas('selected_merchant');
        $response->assertViewHas('page_title');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::wires::lists'));

        $response->assertOk();
        $response->assertViewIs('admin.wires.index');
        $response->assertViewHas('accounts');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('merchants');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function row_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::wires::data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::wires::storeCreate'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::wires::update', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    // test cases...
}
