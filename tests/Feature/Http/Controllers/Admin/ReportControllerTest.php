<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\ReportController
 */
class ReportControllerTest extends TestCase
{
    /**
     * @test
     */
    public function fee_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::fees'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.fee');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('page_description');
        $response->assertViewHas('Merchants');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_liquidity_log_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::InvestorLiquidityLog'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.InvestorLiquidityLog');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('page_description');
        $response->assertViewHas('company');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_liquidity_log_create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-liquidity-log-create'));

        $response->assertRedirect(withSuccess('Successfully Created'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_liquidity_log_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-liquidity-log-download'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_liquidity_log_truncate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-liquidity-log-truncate'));

        $response->assertRedirect(withSuccess('Successfully Deleted'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_r_t_r_balance_log_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::InvestorRTRBalanceLog'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.InvestorRTRBalanceLog');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('page_description');
        $response->assertViewHas('company');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_r_t_r_balance_log_create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-rtr-balance-log-create'));

        $response->assertRedirect(withSuccess('Successfully Created'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_r_t_r_balance_log_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-rtr-balance-log-download'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_r_t_r_balance_truncate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-rtr-balance-log-truncate'));

        $response->assertRedirect(withSuccess('Successfully Deleted'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function anticipated_payment_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::anticipated-payment'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.anticipated_payment');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('filter');
        $response->assertViewHas('merchants_id');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function anticipated_payment_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::anticipated-payment.download'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function default_rate_merchant_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::default-rate-merchant-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.default_rate_merchant_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('companies');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('investor_types');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function default_rate_merchant_report_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::default-rate-merchant-report-data'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function default_rate_merchant_report_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::def-payment-rep-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function default_rate_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::default-rate-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.default_rate_report');
        $response->assertViewHas('lenders');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('companies');
        $response->assertViewHas('investor_types');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function default_report_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::defaultreportdownload'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delinquent_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::delinquent-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.delinquent_report');
        $response->assertViewHas('lenders');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('merchants');
        $response->assertViewHas('investors');
        $response->assertViewHas('industries');
        $response->assertViewHas('companies');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delinquentreportdownload_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::delinquentreportdownload'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function equity_investor_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::equity-investor-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.equity_investor_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_invester_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::get-investor-data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_payment_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::get-payment-data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function get_payment_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::get_payment_report'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function interest_accured_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::interest-accured'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.interest_accured');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_assignment_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-assignment-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_assignment_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::get-investor-assign-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_assignment');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('selected_investor');
        $response->assertViewHas('sdate');
        $response->assertViewHas('edate');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_interest_accured_details_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-interest-accured-details'), [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_interest_accured_details');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('input');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_interest_accured_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor_interest_accured_report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_interest_accured');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('merchants');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_performance_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-performance'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_performance');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('title');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_performance_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-data'));

        $response->assertRedirect(withErrors($e->getMessage()));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_performance_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::investor-performance-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_profit_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-profit-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_profit_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('industries');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('selected_investor');
        $response->assertViewHas('investor_types');
        $response->assertViewHas('companies');
        $response->assertViewHas('substatus_flags');
        $response->assertViewHas('label');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_report_view_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor-view'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('industries');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('selected_investor');
        $response->assertViewHas('investor_types');
        $response->assertViewHas('companies');
        $response->assertViewHas('substatus_flags');
        $response->assertViewHas('label');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function investor_interest_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::investor_interest_report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.investor_interest_accured3');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('merchants');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_delinquentreportdownload_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::lenderDelinquentreportdownload'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_performance_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::lender-performance'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.lender_performance');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_performance_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::lender-data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_performance_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::lender-performance-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::lender-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.lender_report');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('lenders');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function lender_report_view_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::lender-report-view'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.lender_report_view');
        $response->assertViewHas('page_title');
        $response->assertViewHas('lenders');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function liquidity_log_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::liquidity-log-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function liquidity_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::liquidity-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.liquidity_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('companies');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function liquidity_log_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::liquidity-log'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.liquidity_log');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');
        $response->assertViewHas('search_date');
        $response->assertViewHas('companies');
        $response->assertViewHas('label');
        $response->assertViewHas('descriptions');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function merchant_liquidity_log_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::liquidity-log-merchant'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.merchant_liquidity_log');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');
        $response->assertViewHas('companies');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function merchants_per_diff_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::merchant_per_diff'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.merchants_per_diff_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function over_payment_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::overpayment-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.overpayment');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('sdate');
        $response->assertViewHas('edate');
        $response->assertViewHas('investors');
        $response->assertViewHas('companies');
        $response->assertViewHas('lenders');
        $response->assertViewHas('sub_statuses');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payment_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::payment-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payment_left_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::payment-left-download'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payment_report_details_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::payment-report-details'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.payment_report_details');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('merchants');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payment_left_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::payment-left-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.payment_left_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('lenders');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('companies');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function paymentrep_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::payment-rep-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payments_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::payments'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.index');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('merchants');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('selected_investor');
        $response->assertViewHas('sdate');
        $response->assertViewHas('edate');
        $response->assertViewHas('sub_statuses');
        $response->assertViewHas('fields');
        $response->assertViewHas('investor_types');
        $response->assertViewHas('companies');
        $response->assertViewHas('rcodes');
        $response->assertViewHas('label');
        $response->assertViewHas('payment_methods');
        $response->assertViewHas('recurrence_types');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function payments1_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::payments1'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.payment1');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('investors');
        $response->assertViewHas('statuses');
        $response->assertViewHas('investor_types');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::get-profit'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profit');
        $response->assertViewHas('title');
        $response->assertViewHas('default_rate');
        $response->assertViewHas('investorArray');
        $response->assertViewHas('investor_profit');
        $response->assertViewHas('velocity_profit');
        $response->assertViewHas('subadmin_profit');
        $response->assertViewHas('allsubadmin');
        $response->assertViewHas('selected_admin');
        $response->assertViewHas('subadminsProfitArray');
        $response->assertViewHas('billsAndDist');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability21_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::profitability21-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability2_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::profitability2-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability3_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::profitability3-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability4_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::profitability4-export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability_report2_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::profitability2'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profitability2');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability_report21_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::profitability21'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profitability21');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability_report3_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::profitability3'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profitability3');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability_report4_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::profitability4'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profitability4');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('merchants');
        $response->assertViewHas('industries');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profitability_reportnew_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::profitabilitynew'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.profitability54');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function re_assignment_history_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::get-reassign-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.reassignment_history');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function reconcile_report_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::reconcile_report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.reconcile_report');
        $response->assertViewHas('lenders');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('page_title');
        $response->assertViewHas('reconciles');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function total_portfolio_earnings_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::dept-investor-report'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.dept_investor_report');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function velocity_profitability_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::reports::velocity-profitability'));

        $response->assertOk();
        $response->assertViewIs('admin.reports.velocity_profitability');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');
        $response->assertViewHas('companies');
        $response->assertViewHas('investors');
        $response->assertViewHas('lenders');
        $response->assertViewHas('selected_investor');
        $response->assertViewHas('label');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function velocity_profitability_download_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::reports::velocity-profitability.download'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
