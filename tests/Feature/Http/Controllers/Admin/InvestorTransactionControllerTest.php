<?php

namespace Tests\Feature\Http\Controllers\Admin;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\InvestorTransactionController
 */
class InvestorTransactionControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::create', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.investors.transaction.create');
        $response->assertViewHas('action');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investorId');
        $response->assertViewHas('investors');
        $response->assertViewHas('transaction_categories');
        $response->assertViewHas('investor_type');
        $response->assertViewHas('liquidity');
        $response->assertViewHas('Investor');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_vdistributions_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::vdistribution::createVdistribution'));

        $response->assertOk();
        $response->assertViewIs('admin.distribution.create');
        $response->assertViewHas('page_title');
        $response->assertViewHas('investorId');
        $response->assertViewHas('investors');
        $response->assertViewHas('transaction_categories');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::delete', ['id' => $id, 'tid' => $tid]));

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::edit', ['id' => $id, 'tid' => $tid]));

        $response->assertOk();
        $response->assertViewIs('admin.investors.transaction.create');
        $response->assertViewHas('transaction_categories');
        $response->assertViewHas('investors');
        $response->assertViewHas('page_title');
        $response->assertViewHas('transaction');
        $response->assertViewHas('investorId');
        $response->assertViewHas('action');
        $response->assertViewHas('liquidity');
        $response->assertViewHas('Investor');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::transaction::export', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function generage_interests_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::generage_interests', ['id' => $id]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function generage_interests_for_all_investors_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::get-generage_interests_all'));

        $response->assertRedirect(withInput());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::index', ['id' => $id]));

        $response->assertRedirect(withErrors('This Investor not a company based'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function status_change_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::investors::transaction::status_change', ['id' => $id, 'tid' => $tid]));

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::transaction::store', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_vdistributions_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::vdistribution::storeVdistribution'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::investors::transaction::update', ['id' => $id, 'tid' => $tid]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function v_edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::vdistribution::edit', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.distribution.edit');
        $response->assertViewHas('vDist');
        $response->assertViewHas('vId');
        $response->assertViewHas('investors');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function v_export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::vdistribution::export'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function v_row_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::vdistribution::data'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function v_update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::vdistribution::update', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function vdistributions_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::vdistribution::lists'));

        $response->assertOk();
        $response->assertViewIs('admin.distribution.index');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');

        // TODO: perform additional assertions
    }

    // test cases...
}
