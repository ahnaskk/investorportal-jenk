<?php

namespace Tests\Feature\Http\Controllers\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Auth\FirewallController
 */
class FirewallControllerTest extends TestCase
{
    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::firewall::delete'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('admin::firewall::view', ['id' => $request->user_id]));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function getall_users_data_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::firewall::usersdata'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::firewall::index'));

        $response->assertOk();
        $response->assertViewIs('admin.admins.view_users_firewall');
        $response->assertViewHas('page_title');
        $response->assertViewHas('tableBuilder');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('admin::firewall::view', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.admins.view_user_firewall');
        $response->assertViewHas('page_title');
        $response->assertViewHas('user');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('admin::firewall::add'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withInput());

        // TODO: perform additional assertions
    }

    // test cases...
}
